<Application x:Class="TypeViewer.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    StartupUri="TraceViewer.xaml">
    <Application.Resources>
    <ResourceDictionary>
      
      <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
      <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
      <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
      <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />
      <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
      <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
      <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />
      <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
      <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />      
      
      <SolidColorBrush x:Key="BackgroundColor" Color="#707070"/>
      <SolidColorBrush x:Key="BorderColor" Color="#8E8E8E"/>
      <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#EFEFEF"/>
      <SolidColorBrush x:Key="ThirdBackgroundColor" Color="#CCCCCC"/>
      <SolidColorBrush x:Key="ButtonColor" Color="#43596D"/>
      <SolidColorBrush x:Key="ToolbarColor" Color="#8E9FAD"/>
      <SolidColorBrush x:Key="TextColor" Color="#EAEAEA"/>  
      
      <Style x:Key="Text">
        <Setter Property="Control.FontFamily" Value="Verdana"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextColor}"/>
      </Style>
      <Style x:Key="WindowHeading" BasedOn="{StaticResource Text}">
        <Setter Property="Control.FontSize" Value="16pt" />
      </Style>
      <Style x:Key="ContentText" BasedOn="{StaticResource Text}">
        <Setter Property="Control.FontSize" Value="10pt" />
      </Style>
      <Style x:Key="LabelText" BasedOn="{StaticResource Text}">
        <Setter Property="Control.FontSize" Value="8pt" />
      </Style>
      <Style x:Key="CellText" BasedOn="{StaticResource Text}">
        <Setter Property="Control.FontSize" Value="8pt" />
        <Setter Property="Control.Foreground" Value="Black"/>
      </Style>
      <Style x:Key="PanelStyle" TargetType="Panel">
        <Setter Property="Control.Background" Value="{StaticResource BackgroundColor}"/>
      </Style>
      <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
      </Style>
      <Style x:Key="ButtonFocus">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Control}">
              <Rectangle Margin="1" Name="r1" StrokeThickness="1" Stroke="Red" StrokeDashArray="1 2"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ShadowStyle">
        <Setter Property="Control.Foreground" Value="LightGray" />
      </Style>
      
      <!--Button template-->
      
      <Style x:Key="ButtonStyle" BasedOn="{StaticResource Text}" TargetType="Button">
        <Setter Property="Control.FontSize" Value="8pt" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocus}" />
        <Setter Property="Background" Value="{StaticResource ButtonColor}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <Border Name="border" 
                  BorderThickness="1"
                  Padding="4,2" 
                  BorderBrush="{StaticResource BorderColor}" 
                  CornerRadius="2" 
                  Background="{TemplateBinding Background}">
                <Grid >
                  <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow" Style="{StaticResource ShadowStyle}">
                    <ContentPresenter.RenderTransform>
                      <TranslateTransform X="1.0" Y="1.0" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>-->
                  <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                  <Setter Property="Foreground" Value="#FF4788c8" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter Property="Background" >
                    <Setter.Value>
                      <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                        <GradientStop Color="#FFFFD190" Offset="0.35"/>
                        <GradientStop Color="Orange" Offset="0.95"/>
                        <GradientStop Color="#FFFFD190" Offset="1"/>
                      </LinearGradientBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter TargetName="content" Property="RenderTransform" >
                    <Setter.Value>
                      <TranslateTransform Y="1.0" />
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="IsDefaulted" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                  <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BorderColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="border" Property="Opacity" Value="0.7" />
                  <Setter Property="Foreground" Value="Gray" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <!--Treeview style-->
      
      <Style x:Key="TreeViewStyle" TargetType="TreeView">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="TreeView">
              <Border Name="border" 
                  BorderThickness="2"
                  Padding="2,1" 
                  BorderBrush="{StaticResource BorderColor}" 
                  CornerRadius="2" 
                  Background="{TemplateBinding Background}">
                <ScrollViewer 
                  Focusable="False"
                  CanContentScroll="False"
                  Padding="1">
                  <ItemsPresenter Name="Items"/>
                </ScrollViewer>
              </Border>              
            </ControlTemplate>
          </Setter.Value>          
        </Setter>
      </Style>
      
      <!--Scrollviewer template-->
      
      <Style x:Key="CoolScroll" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollViewer}">
              <Grid Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border
                  BorderThickness="1"
                  CornerRadius="2"
                  BorderBrush="{StaticResource BorderColor}">
                  <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>
                </Border>
                <!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
                <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource ScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
                <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource ScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar"/>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
              <Border 
                Name="Border"
                Margin="1" 
                CornerRadius="2" 
                Background="{StaticResource SecondaryBackgroundColor}"
                BorderBrush="{StaticResource BorderColor}"
                BorderThickness="1">
                <Path 
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Fill="{StaticResource GlyphBrush}"
                  Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryBackgroundColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
              <Border Background="Transparent" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
              <Border 
                CornerRadius="2" 
                Background="{StaticResource SecondaryBackgroundColor}"
                BorderBrush="{StaticResource BorderColor}"
                BorderThickness="1" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
          <Grid.RowDefinitions>
            <RowDefinition MaxHeight="18"/>
            <RowDefinition Height="0.00001*"/>
            <RowDefinition MaxHeight="18"/>
          </Grid.RowDefinitions>
          <Border
            Grid.RowSpan="3"
            CornerRadius="2" 
            Background="{StaticResource BorderColor}" />
          <RepeatButton 
            Grid.Row="0"                           
            Style="{StaticResource ScrollBarLineButton}"
            Height="18"
            Command="ScrollBar.LineUpCommand"
            Content="M 0 4 L 8 4 L 4 0 Z" />
          <Track 
            Name="PART_Track"
            Grid.Row="1"
            IsDirectionReversed="true">
            <Track.DecreaseRepeatButton>
              <RepeatButton 
                Style="{StaticResource ScrollBarPageButton}"
                Command="ScrollBar.PageUpCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb 
                Style="{StaticResource ScrollBarThumb}" 
                Margin="1,0,1,0"  
                Background="{StaticResource SecondaryBackgroundColor}"
                BorderBrush="{StaticResource BorderColor}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton 
                Style="{StaticResource ScrollBarPageButton}"
                Command="ScrollBar.PageDownCommand" />
            </Track.IncreaseRepeatButton>
          </Track>
          <RepeatButton 
            Grid.Row="3" 
            Style="{StaticResource ScrollBarLineButton}"
            Height="18"
            Command="ScrollBar.LineDownCommand"
            Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
      </ControlTemplate>
      
      <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
          <Grid.RowDefinitions>
            <RowDefinition Height="18"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="18"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition MaxWidth="18"/>
          </Grid.ColumnDefinitions>
          <Border
            Grid.ColumnSpan="3"
            CornerRadius="2" 
            Background="{StaticResource BorderColor}" />
          <RepeatButton 
            Grid.Column="0"                           
            Style="{StaticResource ScrollBarLineButton}"
            Width="18"
            Command="ScrollBar.LineLeftCommand"
            Content="M 4 0 L 4 8 L 0 4 Z" />
          <Track 
            Name="PART_Track"
            Grid.Column="1"
            IsDirectionReversed="False">
            <Track.DecreaseRepeatButton>
              <RepeatButton 
                Style="{StaticResource ScrollBarPageButton}"
                Command="ScrollBar.PageLeftCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb 
                Style="{StaticResource ScrollBarThumb}" 
                Margin="1,0,1,0"  
                Background="{StaticResource SecondaryBackgroundColor}"
                BorderBrush="{StaticResource BorderColor}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton 
                Style="{StaticResource ScrollBarPageButton}"
                Command="ScrollBar.PageRightCommand" />
            </Track.IncreaseRepeatButton>
          </Track>
          <RepeatButton 
            Grid.Column="3" 
            Style="{StaticResource ScrollBarLineButton}"
            Width="18"
            Command="ScrollBar.LineRightCommand"
            Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
      </ControlTemplate>

      <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
          <Trigger Property="Orientation" Value="Vertical">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
          </Trigger>
          <Trigger Property="Orientation" Value="Horizontal">
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="18" />
            <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <SolidColorBrush x:Key="TextBackground" Color="#FFCAC8C8"/>
      <Style x:Key="CoolTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColor}"/>
      </Style>
      
      <!--Toolbar template-->
      
      <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#CCC" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#CCC" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#EEE" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#EEE" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#AAA" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#BBB" Offset="0.0"/>
            <GradientStop Color="#EEE" Offset="0.1"/>
            <GradientStop Color="#EEE" Offset="0.9"/>
            <GradientStop Color="#FFF" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
      
      <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#CCC" Offset="0.0"/>
            <GradientStop Color="#444" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#CCC" Offset="0.0"/>
            <GradientStop Color="#444" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#777" Offset="0.0"/>
            <GradientStop Color="#000" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>

      <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
          <GradientStopCollection>
            <GradientStop Color="#444" Offset="0.0"/>
            <GradientStop Color="#888" Offset="1.0"/>
          </GradientStopCollection>
        </GradientBrush.GradientStops>
      </LinearGradientBrush>
      
      <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border 
                x:Name="Border"  
                BorderThickness="1"
                Background="Transparent"
                BorderBrush="Transparent">
                <ContentPresenter 
                  Margin="2"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  RecognizesAccessKey="True"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                </Trigger>
                <Trigger Property="CheckBox.IsChecked" Value="true">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                  <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type Button}"/>
      <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type ToggleButton}"/>
      <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type CheckBox}"/>
      <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type RadioButton}"/>

      <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <Border 
                Name="Border"
                Padding="2"
                Background="{StaticResource WindowBackgroundBrush}"
                BorderBrush="{StaticResource SolidBorderBrush}"
                BorderThickness="1" >
                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
                  <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Cursor" Value="SizeAll"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
              <Border Background="Transparent"
                SnapsToDevicePixels="True">
                <Rectangle Margin="0,2">
                  <Rectangle.Fill>
                    <DrawingBrush Viewport="0,0,4,4" 
                      ViewportUnits="Absolute"
                      Viewbox="0,0,8,8"
                      ViewboxUnits="Absolute"
                      TileMode="Tile">
                      <DrawingBrush.Drawing>
                        <DrawingGroup>
                          <DrawingGroup.Children>
                            <GeometryDrawing Brush="#AAA"
                              Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z"/>
                          </DrawingGroup.Children>
                        </DrawingGroup>
                      </DrawingBrush.Drawing>
                    </DrawingBrush>
                  </Rectangle.Fill>
                </Rectangle>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Border Name="Bd"
                Padding="1"
                BorderThickness="0"
                BorderBrush="{StaticResource SolidBorderBrush}"
                CornerRadius="0,3,3,0"
                Background="Transparent"
                SnapsToDevicePixels="true">
                <Grid>
                  <Image
                    Margin="1"
                    Name="Arrow"
                    VerticalAlignment="Bottom" 
                    Height="14" Source="/EQATECTracerViewer;component/Resources/nav_down_blue.png"></Image>
                  <!--
                  <Path Name="Arrow"
                    Fill="Black"
                    VerticalAlignment="Bottom"
                    Margin="2,3"
                    Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                   -->
                  <ContentPresenter/>
                  
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/>                  
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                  <Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                  <Setter TargetName="Bd" Property="Background" Value="{StaticResource DarkBrush}"/>                  
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter TargetName="Arrow" Property="Opacity" Value="0.5"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToolBar}">
              <Border x:Name="Border"  
                CornerRadius="2" 
                BorderThickness="1"
                Background="{StaticResource ToolbarColor}"
                BorderBrush="{StaticResource NormalBorderBrush}">
                <DockPanel >
                  <ToggleButton DockPanel.Dock="Right"
                    IsEnabled="{TemplateBinding HasOverflowItems}"
                    Style="{StaticResource ToolBarOverflowButtonStyle}"
                    IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                    ClickMode="Press">
                    <Popup x:Name="OverflowPopup"
                      AllowsTransparency="true"
                      Placement="Bottom"
                      IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                      StaysOpen="false"
                      Focusable="false"
                      PopupAnimation="Slide">
                      <Border x:Name="DropDownBorder"
                        Background="{StaticResource WindowBackgroundBrush}"
                        BorderThickness="1"
                        CornerRadius="2"
                        BorderBrush="{StaticResource SolidBorderBrush}">
                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                          Margin="2"
                          WrapWidth="200"
                          Focusable="true" 
                          FocusVisualStyle="{x:Null}"
                          KeyboardNavigation.TabNavigation="Cycle"
                          KeyboardNavigation.DirectionalNavigation="Cycle"/>
                      </Border>
                    </Popup>
                  </ToggleButton>

                  <Thumb x:Name="ToolBarThumb"
                    Style="{StaticResource ToolBarThumbStyle}"
                    Width="10"/>
                  <ToolBarPanel x:Name="PART_ToolBarPanel"
                    IsItemsHost="true"
                    Margin="0,1,2,2"/>
                </DockPanel>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsOverflowOpen" Value="true">
                  <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false"/>
                </Trigger>
                <Trigger Property="ToolBarTray.IsLocked" Value="true">
                  <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}" >
        <Setter Property="Background" Value="{StaticResource HorizontalLightBrush}"/>
      </Style>
    
    <!--Checkbox template-->

      <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Border>
                <Rectangle 
                  Margin="15,0,0,0"
                  StrokeThickness="1"
                  Stroke="#60000000"
                  StrokeDashArray="1 2"/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"    Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
              <BulletDecorator Background="Transparent">
                <BulletDecorator.Bullet>
                  <Border x:Name="Border"  
                    Width="14" 
                    Height="14" 
                    CornerRadius="0">
                    <Canvas>
                    <Rectangle 
                      Name="RectBorder"
                      Canvas.Left="2" 
                      Canvas.Top="2" 
                      Fill="{StaticResource NormalBrush}"
                      Stroke="{StaticResource NormalBorderBrush}"
                      Width="10" 
                      Height="10"></Rectangle>
                    <Path 
                      Canvas.Left="0" 
                      Canvas.Top="0" 
                      Width="14" 
                      Height="14" 
                      x:Name="CheckMark"
                      SnapsToDevicePixels="False" 
                      Stroke="Green"
                      StrokeThickness="2"
                      Data="M 3 3 L 7 10 M 7 9 L 13 1" />
                    </Canvas>
                  </Border>
                </BulletDecorator.Bullet>
                <ContentPresenter Margin="4,0,0,0"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Left"
                  RecognizesAccessKey="True"/>
              </BulletDecorator>
              <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="false">
                  <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                  <Setter TargetName="CheckMark" Property="Data" Value="M 3 11 L 13 0" />
                  <Setter TargetName="CheckMark" Property="Stroke" Value="Olive" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                  <Setter TargetName="RectBorder" Property="Fill" Value="{StaticResource DarkBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                  <Setter TargetName="RectBorder" Property="Fill" Value="{StaticResource PressedBrush}" />
                  <Setter TargetName="RectBorder" Property="Stroke" Value="{StaticResource PressedBorderBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                  <Setter TargetName="RectBorder" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
                  <Setter TargetName="RectBorder" Property="Stroke" Value="{StaticResource DisabledBorderBrush}" />
                  <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>


    </ResourceDictionary>
  </Application.Resources>
</Application>
